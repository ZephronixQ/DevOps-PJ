---
- name: "Настройка NTP"
  become: true
  tags:
    - ntp
  when: inventory_hostname in ['R1', 'PC_R1']
  block:
    - name: Создание Dummy0 на сервере R1
      ansible.builtin.shell: |
        nmcli connection add type dummy ifname dummy0 con-name dummy0
        nmcli connection modify dummy0 ipv4.method manual ipv4.addresses 10.0.0.1/24
        nmcli connection modify dummy0 ipv6.method manual ipv6.addresses 10:0:0:1::a/64
        nmcli connection up dummy0
      when: inventory_hostname == 'R1'

    - name: Копирование файлов на удаленные системы
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "/etc/chrony/chrony.conf"
        mode: 0644
      loop:
        - { src: "files/chrony.conf-server", host: 'R1' }
        - { src: "files/chrony.conf-client", host: 'PC_R1' }
      when: item.host == inventory_hostname

    - name: Получение IP-адреса для интерфейса ens33
      ansible.builtin.shell:
        cmd: ip route | grep '^default' | awk '{print $3}' | grep '^172' || true
      register: ip_address
      changed_when: false

    - name: Удаление маршрута по умолчанию
      ansible.builtin.command:
        cmd: ip route del default via {{ ip_address.stdout }} dev ens33
      when: ip_address.stdout != ''

    - name:
      ansible.builtin.shell:
        cmd: "timedatectl set-timezone Europe/Moscow && systemctl restart chrony"

- name: "Настройка NFS"
  become: true
  tags:
    - nfs
  when: inventory_hostname in ['R1', 'PC_R1']
  block:
    - name: Настройка NFS-server
      ansible.builtin.shell: |
        mkdir -p /mnt/R1
        chmod -R 777 /mnt/R1
        echo "Hello to R1" > /mnt/R1/server1.txt && ls -l /mnt/R1/server1.txt
        echo "/mnt/R1 *(rw,sync,no_subtree_check)" > /etc/exports
        exportfs -ra
      when: inventory_hostname == 'PC_R1'

    - name: Получение IP-адреса для интерфейса ens33
      shell: ip a show dev ens33 | grep 'inet ' | awk '{print $2}' | cut -d/ -f1
      when: inventory_hostname == 'PC_R1'
      register: ip_address
      changed_when: false

    - name: Распространение IP-адреса на другие хосты
      set_fact:
        ip_address: "{{ ip_address.stdout }}"
      when: inventory_hostname == 'PC_R1'
      delegate_to: localhost

    - name: Настройка NFS-client на хосте R1
      ansible.builtin.shell: |
        mkdir -p /mnt/R1
        mount {{ hostvars['PC_R1'].ip_address }}:/mnt/R1 /mnt/R1
      when:
        - inventory_hostname == 'R1'
        - hostvars['PC_R1'].ip_address != ''

- name: "Настройка CUPS"
  become: true
  tags:
    - cups
  when: inventory_hostname == 'PC_R1'
  block:
    - name: Настройка CUPS на сервере PC-R1
      ansible.builtin.shell: |
        cupsctl --remote-admin --remote-any --share-printers
        echo "FileDevice Yes" >> /etc/cups/cups-files.conf
        systemctl restart cups
        mkdir -p /var/spool/virtual_printer
        chown -R lp:lp /var/spool/virtual_printer
        lpadmin -p new_print -E -v file:///var/spool/virtual_printer
